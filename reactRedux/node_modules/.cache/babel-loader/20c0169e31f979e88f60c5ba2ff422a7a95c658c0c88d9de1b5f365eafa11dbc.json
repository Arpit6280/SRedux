{"ast":null,"code":"// redux toolkit\n// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconsole.log('hi');\n\n// const store= configureStore({\n//     reducer:counterSlice.reducer\n// })\n\n// multiple reducer\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","console","log","store","reducer","auth","counterActions","actions"],"sources":["C:/Users/arpit/Documents/SharpnerRedux/reactRedux/src/store/index2.js"],"sourcesContent":["// redux toolkit\r\n// import { createStore } from 'redux';\r\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\r\n\r\nconst initialCounterState={counter:0, showCounter:true};\r\n\r\nconst counterSlice=createSlice({\r\n    name:'counter',\r\n   initialState: initialCounterState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state,action){\r\n            state.counter=state.counter+ action.payload\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter=!state.showCounter\r\n        }\r\n    }\r\n})\r\n\r\nconst initialAuthState={\r\n    isAuthenticated:false\r\n}\r\nconst authSlice=createSlice({\r\n    name:'authentication',\r\n    initialState:initialAuthState,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated=true\r\n        },\r\n        logout(state){\r\n   state.isAuthenticated=false\r\n        }\r\n    }\r\n})\r\n\r\nconsole.log('hi');\r\n\r\n// const store= configureStore({\r\n//     reducer:counterSlice.reducer\r\n// })\r\n\r\n// multiple reducer\r\n\r\nconst store= configureStore({\r\n    reducer:{counter:counterSlice.reducer,auth:authSlice.reducer}\r\n})\r\n\r\nexport const counterActions=counterSlice.actions\r\n\r\nexport default store"],"mappings":"AAAA;AACA;AACA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,mBAAmB,GAAC;EAACC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC;AAEvD,MAAMC,YAAY,GAACL,WAAW,CAAC;EAC3BM,IAAI,EAAC,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EAChCM,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACP,OAAO,GAACO,KAAK,CAACP,OAAO,GAAEU,MAAM,CAACC,OAAO;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACN,WAAW,GAAC,CAACM,KAAK,CAACN,WAAW;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAC;EACnBC,eAAe,EAAC;AACpB,CAAC;AACD,MAAMC,SAAS,GAAClB,WAAW,CAAC;EACxBM,IAAI,EAAC,gBAAgB;EACrBC,YAAY,EAACS,gBAAgB;EAC7BR,QAAQ,EAAC;IACLW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAC,IAAI;IAC9B,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MAClBA,KAAK,CAACO,eAAe,GAAC,KAAK;IACtB;EACJ;AACJ,CAAC,CAAC;AAEFI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;;AAEjB;AACA;AACA;;AAEA;;AAEA,MAAMC,KAAK,GAAEtB,cAAc,CAAC;EACxBuB,OAAO,EAAC;IAACrB,OAAO,EAACE,YAAY,CAACmB,OAAO;IAACC,IAAI,EAACP,SAAS,CAACM;EAAO;AAChE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAACrB,YAAY,CAACsB,OAAO;AAEhD,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}