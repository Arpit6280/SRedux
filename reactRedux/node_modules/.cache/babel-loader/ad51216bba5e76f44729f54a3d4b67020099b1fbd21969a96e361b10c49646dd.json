{"ast":null,"code":"// redux toolkit\n// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {};\ncreateSlice({\n  name: 'authentication'\n});\nconsole.log('hi');\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\n// multiple reducer\n\n// const store= configureStore({\n//     reducer:{counter:counterSlice.reducer,...}\n// })\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","console","log","store","reducer","counterActions","actions"],"sources":["C:/Users/arpit/Documents/SharpnerRedux/reactRedux/src/store/index2.js"],"sourcesContent":["// redux toolkit\r\n// import { createStore } from 'redux';\r\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\r\n\r\nconst initialCounterState={counter:0, showCounter:true};\r\n\r\nconst counterSlice=createSlice({\r\n    name:'counter',\r\n    initialCounterState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state,action){\r\n            state.counter=state.counter+ action.payload\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter=!state.showCounter\r\n        }\r\n    }\r\n})\r\n\r\nconst initialAuthState={\r\n    \r\n}\r\ncreateSlice({\r\n    name:'authentication'\r\n})\r\n\r\nconsole.log('hi');\r\n\r\nconst store= configureStore({\r\n    reducer:counterSlice.reducer\r\n})\r\n\r\n// multiple reducer\r\n\r\n// const store= configureStore({\r\n//     reducer:{counter:counterSlice.reducer,...}\r\n// })\r\n\r\nexport const counterActions=counterSlice.actions\r\n\r\nexport default store"],"mappings":"AAAA;AACA;AACA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,mBAAmB,GAAC;EAACC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC;AAEvD,MAAMC,YAAY,GAACL,WAAW,CAAC;EAC3BM,IAAI,EAAC,SAAS;EACdJ,mBAAmB;EACnBK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACN,OAAO,GAACM,KAAK,CAACN,OAAO,GAAES,MAAM,CAACC,OAAO;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAC,CAACK,KAAK,CAACL,WAAW;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMW,gBAAgB,GAAC,CAEvB,CAAC;AACDf,WAAW,CAAC;EACRM,IAAI,EAAC;AACT,CAAC,CAAC;AAEFU,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;AAEjB,MAAMC,KAAK,GAAEjB,cAAc,CAAC;EACxBkB,OAAO,EAACd,YAAY,CAACc;AACzB,CAAC,CAAC;;AAEF;;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAACf,YAAY,CAACgB,OAAO;AAEhD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}