{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst counterReducer = (state = {\n  counter: 0,\n  showCounter: true\n}, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nconst subscriber = () => {};\nstore.subscribe(subscriber);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","counterReducer","state","counter","showCounter","action","type","amount","store","subscriber","subscribe"],"sources":["C:/Users/arpit/Documents/SharpnerRedux/reactRedux/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\r\nimport {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\n\r\n\r\nconst counterReducer=(state={counter:0, showCounter:true},action)=>{\r\n \r\n    if(action.type==='increment'){\r\n        return{\r\n            counter:state.counter+1,\r\n            showCounter:state.showCounter\r\n        }\r\n    }else  if(action.type==='decrement'){\r\n        return{\r\n            counter:state.counter-1,\r\n            showCounter:state.showCounter\r\n        }\r\n    }\r\n    else  if(action.type==='increase'){\r\n        return{\r\n            counter:state.counter+action.amount,\r\n            showCounter:state.showCounter\r\n        }\r\n    }else if(action.type==='toggle'){\r\n        return{\r\n            showCounter:!state.showCounter,\r\n            counter:state.counter\r\n        }\r\n    }\r\n   \r\n    return state\r\n}\r\n\r\nconst store= createStore(counterReducer);\r\n\r\nconst subscriber=()=>{\r\n\r\n}\r\n\r\nstore.subscribe(subscriber)\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAAQC,WAAW,QAAO,kBAAkB;AAK5C,MAAMC,cAAc,GAACA,CAACC,KAAK,GAAC;EAACC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC,EAACC,MAAM,KAAG;EAE/D,IAAGA,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAM;MACFH,OAAO,EAACD,KAAK,CAACC,OAAO,GAAC,CAAC;MACvBC,WAAW,EAACF,KAAK,CAACE;IACtB,CAAC;EACL,CAAC,MAAM,IAAGC,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IAChC,OAAM;MACFH,OAAO,EAACD,KAAK,CAACC,OAAO,GAAC,CAAC;MACvBC,WAAW,EAACF,KAAK,CAACE;IACtB,CAAC;EACL,CAAC,MACK,IAAGC,MAAM,CAACC,IAAI,KAAG,UAAU,EAAC;IAC9B,OAAM;MACFH,OAAO,EAACD,KAAK,CAACC,OAAO,GAACE,MAAM,CAACE,MAAM;MACnCH,WAAW,EAACF,KAAK,CAACE;IACtB,CAAC;EACL,CAAC,MAAK,IAAGC,MAAM,CAACC,IAAI,KAAG,QAAQ,EAAC;IAC5B,OAAM;MACFF,WAAW,EAAC,CAACF,KAAK,CAACE,WAAW;MAC9BD,OAAO,EAACD,KAAK,CAACC;IAClB,CAAC;EACL;EAEA,OAAOD,KAAK;AAChB,CAAC;AAED,MAAMM,KAAK,GAAET,WAAW,CAACE,cAAc,CAAC;AAExC,MAAMQ,UAAU,GAACA,CAAA,KAAI,CAErB,CAAC;AAEDD,KAAK,CAACE,SAAS,CAACD,UAAU,CAAC;AAE3B,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}